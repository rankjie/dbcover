// Generated by CoffeeScript 1.6.3
var Model, Observe, UpUser, User, Validators, Weather, time, u;

Model = require('../model').Model;

Observe = require('../model').Observe;

Validators = require('../model').Validators;

Observe.define('repo', {
  name: 'mysql',
  provider: {
    type: 'mysql',
    options: {
      host: 'localhost',
      port: 3306,
      user: 'root',
      password: '123123',
      database: 'test',
      connectionLimit: 4
    }
  }
});

Observe.define('repo', {
  name: 'pg',
  provider: {
    type: 'postgresql',
    options: {
      host: 'localhost',
      port: 5432,
      user: 'jeremy',
      password: '123123',
      database: 'jeremy'
    }
  }
});

Observe.define('cache', {
  name: 'default',
  provider: {
    type: 'redis',
    options: {
      host: 'localhost',
      port: 6379
    }
  }
});

Observe.define('cache', {
  name: 'memcache',
  provider: {
    type: 'memcache',
    options: {
      host: 'localhost',
      port: 11212
    }
  }
});

User = new Model({
  meta: {
    table: 'work',
    repo: 'mysql',
    cache: 'redis',
    fields: [
      {
        name: 'name',
        type: 'string',
        validator: null
      }, {
        name: 'age',
        type: 'integer',
        validator: new Validators.integer(1, 100)
      }
    ]
  },
  sayHi: function() {
    return console.log('hi');
  }
});

Weather = new Model({
  meta: {
    table: '天气',
    repo: 'pg',
    cache: 'redis',
    fields: [
      {
        name: 'id',
        type: 'integer',
        column: 'id',
        primkey: true
      }, {
        name: 'city',
        type: 'string',
        column: '城市'
      }, {
        name: 'lowTemp',
        type: 'number',
        column: '最低气温'
      }, {
        name: 'highTemp',
        type: 'number',
        column: '最高气温'
      }, {
        name: 'rain',
        type: 'number',
        column: '降水量'
      }, {
        name: 'date',
        type: 'timestamp',
        column: '日期'
      }
    ]
  }
});

UpUser = new Model({
  meta: {
    table: 'upcloud_user',
    repo: 'mysql',
    cache: 'redis',
    fields: [
      {
        name: 'id',
        type: 'integer',
        primkey: true,
        wait: true
      }, {
        name: 'email',
        type: 'string',
        validator: new Validators.email
      }, {
        name: 'password',
        type: 'string',
        required: 'true'
      }, {
        name: 'created_at',
        type: 'timestamp'
      }, {
        name: 'updated_at',
        type: 'timestamp'
      }
    ]
  }
});

time = new Date;

u = UpUser["new"]({
  email: 'rankjie@gmail.com',
  password: '405d3b8e375466aadad099d7ab5ab1cc',
  created_at: time,
  updated_at: time
});

u.save().then(function(re) {
  console.log(re);
  return console.log(u);
}, function(err) {
  return console.log(err);
});
