// Generated by CoffeeScript 1.6.3
var Postgres, pg, prefix, replace_char;

pg = require('pg');

replace_char = '?';

prefix = ':';

Postgres = (function() {
  function Postgres(config) {
    this.pool = pg.pools.getOrCreate(config);
  }

  Postgres.prototype.query = function(sql, args, callback) {
    var i, k, replaceAll, v, _i, _ref;
    replaceAll = function(find, replace, str) {
      return str.replace(new RegExp(find, 'g'), replace);
    };
    if (Object.prototype.toString.call(args) === '[object Array]') {
      for (i = _i = 0, _ref = sql.match(/\?/g).length; _i < _ref; i = _i += 1) {
        sql = sql.substr(0, sql.indexOf(replace_char)) + ("'" + args[i] + "'") + sql.substr(sql.indexOf(replace_char) + replace_char.length);
      }
    } else if (Object.prototype.toString.call(args) === '[object Object]') {
      for (k in args) {
        v = args[k];
        sql = sql.replace(prefix + k, "'" + v + "'");
      }
    }
    sql = replaceAll('`', '"', sql);
    console.log(sql);
    if (callback === void 0 || callback === null) {
      callback = args;
    }
    return this.pool.connect(function(err, client, done) {
      if (err) {
        return console.error('error fetching client from pool', err);
      }
      return client.query(sql, function(err, rows) {
        done();
        return callback(err, rows.rows);
      });
    });
  };

  Postgres.prototype.end = function() {
    return pg.end();
  };

  return Postgres;

})();

module.exports = Postgres;
