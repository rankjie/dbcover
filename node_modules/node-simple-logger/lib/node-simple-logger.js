require('mootools');

var clc = require('cli-color');

var Logger = new Class({
	Implements: [Options, Events],
	options: {
		logLevel: "debug"
	},
	
    initialize: function() {
		
    },
	
	error: function(message, fn, params) {
		this.fireEvent('LoggerMessage', ['error', message]);
		
		if(this.options.logLevel == "error" || this.options.logLevel == "warn" || this.options.logLevel == "info" || this.options.logLevel == "debug") {
			if(fn) console.log(clc.red("   error -") + " " + this[fn](params) + " " + message);
			else console.log(clc.red("   error -") + " " + message);
		}
	},
	
	warn: function(message, fn, params) {
		this.fireEvent('LoggerMessage', ['warn', message]);
		
		if(this.options.logLevel == "warn" || this.options.logLevel == "info" || this.options.logLevel == "debug") {
			if(fn) console.log(clc.yellow("   warn  -") + " " + this[fn](params) + " " + message);
			else console.log(clc.yellow("   warn  -") + " " + message);
		}
	},
	
	info: function(message, fn, params) {
		this.fireEvent('LoggerMessage', ['info', message]);
		
		if(this.options.logLevel == "info" || this.options.logLevel == "debug") {
			if(fn) console.log(clc.cyan("   info  -") + " " + this[fn](params) + " " + message);
			else console.log(clc.cyan("   info  -") + " " + message);
		}
	},
	
	debug: function(message, fn, params) {
		this.fireEvent('LoggerMessage', ['debug', message]);
		
		if(this.options.logLevel == "debug") {
			var grey = clc.xterm(240);
			
			if(fn) console.log(grey("   debug -") + " " + this[fn](params) + " " + message);
			else console.log(grey("   debug -") + " " + message);
		}
	},
	
	io: function(params) {
		var other = params[0];
		var type = params[1];
		var way = params[2];
		
		var arrow = '';
		
		if(way == '>') arrow = arrow + '-';
		else arrow = arrow + '<';
		
		if(type == 'i') arrow = arrow + 'i';
		else if(type == 'r') arrow = arrow + 'r';
		else arrow = arrow + 'w';
		
		if(way == '>') arrow = arrow + '>';
		else arrow = arrow + '-';
		
		if(type == 'i') arrow = clc.cyan(arrow);
		else if(type == 'r') arrow = clc.green(arrow);
		else arrow = clc.yellow(arrow);
		
		return arrow + ' ' + other + ' :';
	},
});

var logger = new Logger();

exports.error = function(message, fn, params) {
	logger.error(message, fn, params);
};
exports.warn = function(message, fn, params) {
	logger.warn(message, fn, params);
};
exports.info = function(message, fn, params) {
	logger.info(message, fn, params);
};
exports.debug = function(message, fn, params) {
	logger.debug(message, fn, params);
};